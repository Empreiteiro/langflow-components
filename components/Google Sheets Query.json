{"data":{"edges":[],"nodes":[{"data":{"id":"GoogleSheetsQuery-8Afqu","node":{"base_classes":["DataFrame"],"beta":false,"conditional_paths":[],"custom_fields":{},"description":"Lists records from a Google Sheets spreadsheet and allows filtering. Can be triggered by webhook.","display_name":"Google Sheets Query","documentation":"","edited":true,"field_order":["webhook_data","gcp_credentials_json","spreadsheet_id","range_name","query"],"frozen":false,"icon":"table","legacy":false,"lf_version":"1.3.2","metadata":{},"minimized":false,"output_types":[],"outputs":[{"allows_loop":false,"cache":true,"display_name":"DataFrame","hidden":false,"method":"build","name":"dataframe","options":null,"required_inputs":null,"selected":"DataFrame","tool_mode":true,"types":["DataFrame"],"value":"__UNDEFINED__"}],"pinned":false,"template":{"_type":"Component","code":{"advanced":true,"dynamic":true,"fileTypes":[],"file_path":"","info":"","list":false,"load_from_db":false,"multiline":true,"name":"code","password":false,"placeholder":"","required":true,"show":true,"title_case":false,"type":"code","value":"from langflow.custom import Component\r\nfrom langflow.io import StrInput, FileInput, Output, DataInput\r\nfrom langflow.schema import DataFrame, Data\r\nimport pandas as pd\r\nfrom google.oauth2 import service_account\r\nfrom googleapiclient.discovery import build\r\nimport json\r\n\r\nclass GoogleSheetsQuery(Component):\r\n    display_name = \"Google Sheets Query\"\r\n    description = \"Lists records from a Google Sheets spreadsheet and allows filtering. Can be triggered by webhook.\"\r\n    icon = \"table\"\r\n    name = \"GoogleSheetsQuery\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"webhook_data\",\r\n            display_name=\"Webhook Trigger\",\r\n            info=\"Optional data from webhook trigger. Can override other inputs.\",\r\n            required=False,\r\n            advanced=True\r\n        ),\r\n        FileInput(\r\n            name=\"gcp_credentials_json\",\r\n            display_name=\"GCP Credentials JSON File\",\r\n            file_types=[\"json\"],\r\n            info=\"Upload your Google Cloud Platform service account JSON key.\",\r\n            required=True\r\n        ),\r\n        StrInput(\r\n            name=\"spreadsheet_id\",\r\n            display_name=\"Spreadsheet ID\",\r\n            info=\"The ID of the Google Sheets spreadsheet.\",\r\n            required=True\r\n        ),\r\n        StrInput(\r\n            name=\"range_name\",\r\n            display_name=\"Sheet Range\",\r\n            info=\"Example: 'Sheet1!A1:D100'.\",\r\n            required=True\r\n        ),\r\n        StrInput(\r\n            name=\"query\",\r\n            display_name=\"Filter Query\",\r\n            info=\"Expression to filter results. Example: 'column1 == \\\"value\\\"'.\",\r\n            required=False\r\n        )\r\n    ]\r\n\r\n    outputs = [\r\n        Output(\r\n            name=\"dataframe\",\r\n            display_name=\"DataFrame\",\r\n            method=\"build\"\r\n        )\r\n    ]\r\n\r\n    def build(self) -> DataFrame:\r\n        try:\r\n            spreadsheet_id = self.spreadsheet_id\r\n            range_name = self.range_name\r\n            query = self.query\r\n\r\n            # Check if webhook_data provides overrides\r\n            if isinstance(self.webhook_data, Data) and isinstance(self.webhook_data.data, dict):\r\n                data = self.webhook_data.data\r\n                spreadsheet_id = data.get(\"spreadsheet_id\", spreadsheet_id)\r\n                range_name = data.get(\"range_name\", range_name)\r\n                query = data.get(\"query\", query)\r\n\r\n            if not self.gcp_credentials_json:\r\n                raise ValueError(\"GCP credentials file is empty.\")\r\n\r\n            with open(self.gcp_credentials_json, \"r\", encoding=\"utf-8\") as f:\r\n                credentials_dict = json.load(f)\r\n\r\n            credentials = service_account.Credentials.from_service_account_info(\r\n                credentials_dict,\r\n                scopes=[\"https://www.googleapis.com/auth/spreadsheets.readonly\"]\r\n            )\r\n\r\n            service = build(\"sheets\", \"v4\", credentials=credentials)\r\n            sheet = service.spreadsheets()\r\n            result = sheet.values().get(spreadsheetId=spreadsheet_id, range=range_name).execute()\r\n            values = result.get(\"values\", [])\r\n\r\n            if not values:\r\n                return DataFrame(pd.DataFrame())\r\n\r\n            df = pd.DataFrame(values[1:], columns=values[0])\r\n\r\n            if query:\r\n                df = df.query(query, engine=\"python\")\r\n\r\n            return DataFrame(df)\r\n\r\n        except Exception as e:\r\n            error_msg = f\"Error fetching data: {str(e)}\"\r\n            self.status = error_msg\r\n            self.log(error_msg)\r\n            return DataFrame(pd.DataFrame({\"error\": [str(e)]}))\r\n"},"gcp_credentials_json":{"_input_type":"FileInput","advanced":false,"display_name":"GCP Credentials JSON File","dynamic":false,"fileTypes":["json"],"file_path":"","info":"Upload your Google Cloud Platform service account JSON key.","list":false,"list_add_label":"Add More","name":"gcp_credentials_json","placeholder":"","required":true,"show":true,"temp_file":false,"title_case":false,"trace_as_metadata":true,"type":"file","value":""},"query":{"_input_type":"StrInput","advanced":false,"display_name":"Filter Query","dynamic":false,"info":"Expression to filter results. Example: 'column1 == \"value\"'.","list":false,"list_add_label":"Add More","load_from_db":false,"name":"query","placeholder":"","required":false,"show":true,"title_case":false,"tool_mode":false,"trace_as_metadata":true,"type":"str","value":"IA == 'N√ÉO' and Validade == 'FALSE'"},"range_name":{"_input_type":"StrInput","advanced":false,"display_name":"Sheet Range","dynamic":false,"info":"Example: 'Sheet1!A1:D100'.","list":false,"list_add_label":"Add More","load_from_db":false,"name":"range_name","placeholder":"","required":true,"show":true,"title_case":false,"tool_mode":false,"trace_as_metadata":true,"type":"str","value":"debit_party_frequency_CNPJ!A:K"},"spreadsheet_id":{"_input_type":"StrInput","advanced":false,"display_name":"Spreadsheet ID","dynamic":false,"info":"The ID of the Google Sheets spreadsheet.","list":false,"list_add_label":"Add More","load_from_db":false,"name":"spreadsheet_id","placeholder":"","required":true,"show":true,"title_case":false,"tool_mode":false,"trace_as_metadata":true,"type":"str","value":"1wO7e-FrdvAtkSEKIgWSSLX4Wyp2nufiN4Rh_KvoZffw"},"webhook_data":{"_input_type":"DataInput","advanced":false,"display_name":"Webhook Trigger","dynamic":false,"info":"Optional data from webhook trigger. Can override other inputs.","input_types":["Data"],"list":false,"list_add_label":"Add More","name":"webhook_data","placeholder":"","required":false,"show":true,"title_case":false,"tool_mode":false,"trace_as_input":true,"trace_as_metadata":true,"type":"other","value":""}},"tool_mode":false,"official":false},"showNode":true,"type":"GoogleSheetsQuery"},"id":"GoogleSheetsQuery-8Afqu","position":{"x":0,"y":0},"type":"genericNode"}],"viewport":{"x":1,"y":1,"zoom":1}},"description":"Lists records from a Google Sheets spreadsheet and allows filtering. Can be triggered by webhook.","name":"Google Sheets Query","id":"GoogleSheetsQuery-8Afqu","is_component":true,"last_tested_version":"1.3.4"}